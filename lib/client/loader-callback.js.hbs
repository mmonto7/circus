{{!
  Derived from:
  https://github.com/webpack/webpack/blob/master/lib/JsonpMainTemplatePlugin.js

  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
}}
// install a JSONP callback for chunk loading
var parentJsonpFunction = window[{{jsonpFunction}}];
window[{{jsonpFunction}}] = function webpackJsonpCallback(componentId, chunkIds, moreModules) {
  if (parentJsonpFunction) {
    parentJsonpFunction(componentId, chunkIds, moreModules);
  }

  if (componentId !== {{componentId}}) {
    return;
  }

  // add "moreModules" to the modules object,
  // then flag all "chunkIds" as loaded and fire callback
  var moduleId, chunkId, i = 0, callbacks = [];
  {{#if exportAMD}}
  var amdLoad = [];
  {{/if}}
  for (; i < chunkIds.length; i++) {
    chunkId = chunkIds[i];
    if (installedChunks[chunkId]) {
      callbacks.push.apply(callbacks, installedChunks[chunkId]);
    }
    installedChunks[chunkId] = 0;

    {{#if exportAMD}}
    if (window.define) {
      var amdChunkName = 'chunk_' + {{componentId}} + chunkId;
      define(amdChunkName, function() {});
      amdLoad.push(amdChunkName);
    }
    {{/if}}
  }
  for (moduleId in moreModules) {
    {{addModules}}
  }
  while (callbacks.length) {
    callbacks.shift().call(null, {{requireFn}});
  }
  {{#if moreModules}}
    if (moreModules[0]) {
      installedModules[0] = 0;
      {{requireFn}}(0);
    }
  {{/if}}

  {{#if exportAMD}}
  if (window.define) {
    // This call is needed to force the above defines to be properly registered
    // within the module system. require.js does not recognize `define` statements
    // that occur in scripts that are loaded through external means, without a call
    // such as this.
    require(amdLoad);
  }
  {{/if}}
};
