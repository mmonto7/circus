{{!
  Derived from:
  https://github.com/webpack/webpack/blob/master/lib/JsonpMainTemplatePlugin.js

  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
}}
if (window[{{jsonpFunction}}]) {
  throw new Error('Duplicate bootstrap defined');
}

// install a JSONP callback for chunk loading
window[{{jsonpFunction}}] = function(componentName, chunkIds, chunkDeps, moreModules) {
  // Ensure that the root component is loaded before we do anything
  loadComponent(componentName, function() {
    var component = installedComponents[componentName];

    component.ec/*ensureComponent*/(chunkDeps, function() {
      // add "moreModules" to the modules object,
      // then flag all "chunkIds" as loaded and fire callback
      var moduleId, chunkId, i = 0, callbacks = [];
      {{#if exportAMD}}
      var amdLoad = [];
      {{/if}}
      for (; i < chunkIds.length; i++) {
        chunkId = chunkIds[i];
        if (installedChunks[componentName][chunkId]) {
          callbacks.push.apply(callbacks, installedChunks[componentName][chunkId]);
        }
        installedChunks[componentName][chunkId] = 0;

        {{#if exportAMD}}
        if (window.define) {
          var amdChunkName = 'chunk_' + componentName + chunkId;
          define(amdChunkName, function() {});
          amdLoad.push(amdChunkName);
        }
        {{/if}}
      }
      for (moduleId in moreModules) {
        component.m[moduleId] = moreModules[moduleId];
      }
      while (callbacks.length) {
        callbacks.shift().call(null, component);
      }

      {{#if exportAMD}}
      if (window.define) {
        // This call is needed to force the above defines to be properly registered
        // within the module system. require.js does not recognize `define` statements
        // that occur in scripts that are loaded through external means, without a call
        // such as this.
        require(amdLoad);
      }
      {{/if}}
    });
  });
};
